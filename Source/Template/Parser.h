//
//  Generated by pegged $Version
//  Fork: https://github.com/hydrixos/pegged
//  File is auto-generated. Do not modify.
//

//!$OtherClasses

/*!
 @abstract The ParserClass public interface
 */
@interface ParserClass : NSObject

//!$Properties

/*!
 @abstract The last error state of the parser.
 @discussion ParserClassErrorStringLocationKey, ParserClassErrorStringLengthKey provides the index and length of the errorneous string (NSNumber), ParserClassErrorStringKey the key of the error. The NSLocalizedDescription will be set to "Unmatched<Rulename>".
 */
@property (readonly) NSError *lastError;

extern NSString *ParserClassErrorStringLocationKey;
extern NSString *ParserClassErrorStringLengthKey;
extern NSString *ParserClassErrorStringKey;

/*!
 @abstract Parses the given string and passes the return value of the start rule as output argument.
 @discussion Returns YES on match. The given context will be passed to all action results implementing the ParserClassDiagnostics protocol. This way contextual information (like source URLs) may be stored in statements. It will be also available to all actions through the "parser.context" property.
 */
- (BOOL)parseString:(NSString *)string usingContext:(NSDictionary *)context result:(id *)result;

@end



/*!
 @abstract Methods available to parser actions
 */
@interface ParserClass (ParserActionHelper)


#pragma mark - Parser state

/*!
 @abstract The start index of the current capture
 */
@property (readonly) NSUInteger captureStart;

/*!
 @abstract The end index of the current capture
 */
@property (readonly) NSUInteger captureEnd;

/*!
 @abstract The currently parsed string
 */
@property (readonly) NSString* string;

/*!
 @abstract The context provided for parsing.
 */
@property (readonly) NSDictionary* context;


#pragma mark - Action helpers

/*!
 @abstract Provides a result for the current rule
 */
- (void)pushResult:(id)result;

/*!
 @abstract Accesses the next result of a sub-rule
 */
- (id)nextResult;

/*!
 @abstract Accesses the next result of a sub-rule. Returns nil, if none is available
 */
- (id)nextResultOrNil;

/*!
 @abstract Accesses the result of a sub-rule with a certain index
 */
- (id)resultAtIndex:(NSInteger)index;

/*!
 @abstract Accesses the result of a sub-rule with a certain index. If the result does not exist, nil is returned.
 */
- (id)resultAtIndexIfAny:(NSInteger)index;

/*!
 @abstract Provies all sub-rule results as array.
 */
- (NSArray *)allResults;

/*!
 @abstract Provides the count of results.
 */
- (NSInteger)resultCount;

/*!
 @abstract Provides the range of the current action
 */
- (NSRange)rangeForCurrentAction;

@end



/*!
 @abstract A protocol that is used to annotate diagnostic informations on parser results
*/
@protocol ParserClassDiagnostics <NSObject>

@optional

/*!
 @abstract Sets the string and range a style statement was parsed from. The parsing context will be also passed.
 */
- (void)setSourceString:(NSString *)string range:(NSRange)range context:(NSDictionary *)context;

@end
